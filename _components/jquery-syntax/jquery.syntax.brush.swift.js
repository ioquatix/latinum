// This file is part of the "jQuery.Syntax" project, and is distributed under the MIT License.
Syntax.register("swift",function(a){a.push(["fileprivate","open","private","public"],{klass:"access"});a.push(["self","super","true","false","nil"],{klass:"constant"});a.push({pattern:/`[^`]+`/g,klass:"identifier"});a.push({pattern:/\\\(([^)]*)\)/g,matches:Syntax.extractMatches({brush:"swift",only:["string"]})});a.push(Syntax.lib.camelCaseType);a.push("associatedtype class deinit enum extension fileprivate func import init inout internal let operator private protocol static struct subscript typealias var break case continue default defer do else fallthrough for guard if in repeat return switch where while as catch is rethrows throw throws try _ #available #colorLiteral #column #else #elseif #endif #file #fileLiteral #function #if #imageLiteral #line #selector #sourceLocation associativity convenience dynamic didSet final get infix indirect lazy left mutating none nonmutating optional override postfix precedence prefix Protocol required right set Type unowned weak willSet".split(" "),
{klass:"keyword"});a.push("+ * / - & | ~ ! % < = > ( ) { } [ ] . , : ; = @ # -> ` ? !".split(" "),{klass:"operator"});a.push(Syntax.lib.cStyleComment);a.push(Syntax.lib.cppStyleComment);a.push(Syntax.lib.webLink);a.push(Syntax.lib.singleQuotedString);a.push(Syntax.lib.doubleQuotedString);a.push(Syntax.lib.stringEscape);a.push(Syntax.lib.decimalNumber);a.push(Syntax.lib.hexNumber);a.push(Syntax.lib.cStyleFunction)});
