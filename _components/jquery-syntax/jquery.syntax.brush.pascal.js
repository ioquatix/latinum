// This file is part of the "jQuery.Syntax" project, and is distributed under the MIT License.
Syntax.register("pascal",function(a){a.push(["true","false","nil"],{klass:"constant",options:"gi"});a.push("absolute abstract all and_then as asm asmname attribute begin bindable c c_language case class const constructor destructor dispose do downto else end except exit export exports external far file finalization finally for forward function goto if implementation import inherited initialization inline interface interrupt is keywords label library module name near new object of on only operator or_else otherwise packed pascal pow private procedure program property protected public published qualified raise record repeat resident restricted segment set then threadvar to try type unit until uses value var view virtual while with".split(" "),
{klass:"keyword",options:"gi"});a.push("+ - * / div mod and or xor shl shr not = >= > <> <= < in :=".split(" "),{klass:"operator",options:"gi"});a.push(Syntax.lib.camelCaseType);a.push({pattern:/\{[\s\S]*?\}/gm,klass:"comment",allow:["href"]});a.push({pattern:/\(\*[\s\S]*?\*\)/gm,klass:"comment",allow:["href"]});a.push(Syntax.lib.webLink);a.push(Syntax.lib.singleQuotedString);a.push(Syntax.lib.doubleQuotedString);a.push(Syntax.lib.stringEscape);a.push(Syntax.lib.decimalNumber);a.push(Syntax.lib.hexNumber);
a.push(Syntax.lib.cStyleFunction)});
